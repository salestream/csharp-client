/* 
 * Salestream API
 *
 * Salestream API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing LeadOpportunityApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LeadOpportunityApiTests
    {
        private LeadOpportunityApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LeadOpportunityApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LeadOpportunityApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LeadOpportunityApi
            //Assert.IsInstanceOfType(typeof(LeadOpportunityApi), instance, "instance is a LeadOpportunityApi");
        }

        
        /// <summary>
        /// Test LeadIdOpportunityGet
        /// </summary>
        [Test]
        public void LeadIdOpportunityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.LeadIdOpportunityGet(id);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdOpportunityOpportunityIdDelete
        /// </summary>
        [Test]
        public void LeadIdOpportunityOpportunityIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string opportunityId = null;
            //var response = instance.LeadIdOpportunityOpportunityIdDelete(id, opportunityId);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdOpportunityOpportunityIdPut
        /// </summary>
        [Test]
        public void LeadIdOpportunityOpportunityIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string opportunityId = null;
            //int? value = null;
            //int? estCloseDate = null;
            //string assignee = null;
            //int? confidence = null;
            //string contact = null;
            //Text comment = null;
            //var response = instance.LeadIdOpportunityOpportunityIdPut(id, opportunityId, value, estCloseDate, assignee, confidence, contact, comment);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdOpportunityPost
        /// </summary>
        [Test]
        public void LeadIdOpportunityPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? value = null;
            //int? estCloseDate = null;
            //string assignee = null;
            //int? confidence = null;
            //string contact = null;
            //Text comment = null;
            //var response = instance.LeadIdOpportunityPost(id, value, estCloseDate, assignee, confidence, contact, comment);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
    }

}
