/* 
 * Salestream API
 *
 * Salestream API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing ActivityApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ActivityApiTests
    {
        private ActivityApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ActivityApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ActivityApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ActivityApi
            //Assert.IsInstanceOfType(typeof(ActivityApi), instance, "instance is a ActivityApi");
        }

        
        /// <summary>
        /// Test LeadIdActivityEmailEmailIdDelete
        /// </summary>
        [Test]
        public void LeadIdActivityEmailEmailIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string emailId = null;
            //var response = instance.LeadIdActivityEmailEmailIdDelete(id, emailId);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdActivityEmailEmailIdPut
        /// </summary>
        [Test]
        public void LeadIdActivityEmailEmailIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string emailId = null;
            //string emailId = null;
            //List<string> to = null;
            //List<string> cc = null;
            //List<string> bcc = null;
            //string subject = null;
            //string message = null;
            //bool? draft = null;
            //bool? reminderEnabled = null;
            //int? reminderDate = null;
            //int? schedule = null;
            //var response = instance.LeadIdActivityEmailEmailIdPut(id, emailId, emailId, to, cc, bcc, subject, message, draft, reminderEnabled, reminderDate, schedule);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdActivityEmailPost
        /// </summary>
        [Test]
        public void LeadIdActivityEmailPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string emailId = null;
            //List<string> to = null;
            //string subject = null;
            //string message = null;
            //List<string> cc = null;
            //List<string> bcc = null;
            //bool? draft = null;
            //bool? reminderEnabled = null;
            //int? reminderDate = null;
            //int? schedule = null;
            //var response = instance.LeadIdActivityEmailPost(id, emailId, to, subject, message, cc, bcc, draft, reminderEnabled, reminderDate, schedule);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdActivityGet
        /// </summary>
        [Test]
        public void LeadIdActivityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string after = null;
            //string before = null;
            //var response = instance.LeadIdActivityGet(id, after, before);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdActivityNoteNoteIdDelete
        /// </summary>
        [Test]
        public void LeadIdActivityNoteNoteIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string noteId = null;
            //var response = instance.LeadIdActivityNoteNoteIdDelete(id, noteId);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdActivityNoteNoteIdPut
        /// </summary>
        [Test]
        public void LeadIdActivityNoteNoteIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string noteId = null;
            //string note = null;
            //var response = instance.LeadIdActivityNoteNoteIdPut(id, noteId, note);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdActivityNotePost
        /// </summary>
        [Test]
        public void LeadIdActivityNotePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string note = null;
            //var response = instance.LeadIdActivityNotePost(id, note);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdActivitySmsPost
        /// </summary>
        [Test]
        public void LeadIdActivitySmsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string phoneId = null;
            //string detailId = null;
            //Text message = null;
            //bool? draft = null;
            //int? schedule = null;
            //var response = instance.LeadIdActivitySmsPost(id, phoneId, detailId, message, draft, schedule);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdActivitySmsSmsIdDelete
        /// </summary>
        [Test]
        public void LeadIdActivitySmsSmsIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string smsId = null;
            //var response = instance.LeadIdActivitySmsSmsIdDelete(id, smsId);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdActivitySmsSmsIdPut
        /// </summary>
        [Test]
        public void LeadIdActivitySmsSmsIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string smsId = null;
            //string phoneId = null;
            //string detailId = null;
            //Text message = null;
            //bool? draft = null;
            //int? schedule = null;
            //var response = instance.LeadIdActivitySmsSmsIdPut(id, smsId, phoneId, detailId, message, draft, schedule);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
    }

}
