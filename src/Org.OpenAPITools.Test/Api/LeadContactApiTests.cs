/* 
 * Salestream API
 *
 * Salestream API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing LeadContactApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LeadContactApiTests
    {
        private LeadContactApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LeadContactApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LeadContactApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LeadContactApi
            //Assert.IsInstanceOfType(typeof(LeadContactApi), instance, "instance is a LeadContactApi");
        }

        
        /// <summary>
        /// Test LeadIdContactsContactIdDelete
        /// </summary>
        [Test]
        public void LeadIdContactsContactIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string contactId = null;
            //var response = instance.LeadIdContactsContactIdDelete(id, contactId);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdContactsContactIdGet
        /// </summary>
        [Test]
        public void LeadIdContactsContactIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string contactId = null;
            //var response = instance.LeadIdContactsContactIdGet(id, contactId);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdContactsContactIdPut
        /// </summary>
        [Test]
        public void LeadIdContactsContactIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string contactId = null;
            //string name = null;
            //string title = null;
            //List<CreateContactDetails> details = null;
            //var response = instance.LeadIdContactsContactIdPut(id, contactId, name, title, details);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdContactsGet
        /// </summary>
        [Test]
        public void LeadIdContactsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.LeadIdContactsGet(id);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test LeadIdContactsPost
        /// </summary>
        [Test]
        public void LeadIdContactsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string name = null;
            //string title = null;
            //List<CreateContactDetails> details = null;
            //var response = instance.LeadIdContactsPost(id, name, title, details);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
    }

}
