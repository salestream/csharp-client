/* 
 * Salestream API
 *
 * Salestream API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing WebhookApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WebhookApiTests
    {
        private WebhookApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WebhookApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WebhookApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WebhookApi
            //Assert.IsInstanceOfType(typeof(WebhookApi), instance, "instance is a WebhookApi");
        }

        
        /// <summary>
        /// Test WebhookDelete
        /// </summary>
        [Test]
        public void WebhookDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.WebhookDelete();
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test WebhookGet
        /// </summary>
        [Test]
        public void WebhookGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.WebhookGet();
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test WebhookPost
        /// </summary>
        [Test]
        public void WebhookPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string url = null;
            //string fallbackUrl = null;
            //string errorUrl = null;
            //int? timeout = null;
            //int? retryAttempts = null;
            //var response = instance.WebhookPost(url, fallbackUrl, errorUrl, timeout, retryAttempts);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test WebhookRegisterPost
        /// </summary>
        [Test]
        public void WebhookRegisterPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string resource = null;
            //List<string> fields = null;
            //var response = instance.WebhookRegisterPost(resource, fields);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
        /// <summary>
        /// Test WebhookUnregisterPost
        /// </summary>
        [Test]
        public void WebhookUnregisterPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string resource = null;
            //var response = instance.WebhookUnregisterPost(resource);
            //Assert.IsInstanceOf<SuccessResponse> (response, "response is SuccessResponse");
        }
        
    }

}
